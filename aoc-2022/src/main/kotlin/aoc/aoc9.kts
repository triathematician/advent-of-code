import aoc.AocParser.Companion.parse
import aoc.AocRunner
import aoc.print
import kotlin.math.absoluteValue

val day = 9

val testInput = """
    R 4
    U 4
    L 3
    D 1
    R 4
    D 1
    L 5
    R 2
""".parse.mapLines { it[0] to it.substringAfter(" ").toInt() }

val testInput2 = """
    R 5
    U 8
    L 8
    D 3
    R 17
    D 10
    L 25
    U 20
""".parse.mapLines { it[0] to it.substringAfter(" ").toInt() }

val input = """
    U 1
    L 1
    D 2
    U 2
    R 2
    D 1
    L 1
    D 2
    R 2
    D 2
    U 1
    L 1
    D 2
    U 1
    D 2
    L 2
    R 1
    U 1
    L 1
    R 1
    U 1
    R 2
    L 1
    D 2
    U 1
    R 1
    L 2
    R 2
    L 2
    R 2
    L 2
    U 1
    L 2
    U 1
    D 2
    L 2
    R 2
    D 2
    L 2
    U 2
    L 1
    U 1
    D 2
    L 1
    D 1
    R 1
    U 1
    L 2
    D 2
    U 2
    L 1
    D 1
    R 2
    D 1
    R 2
    D 1
    R 2
    U 2
    R 2
    L 2
    R 1
    D 1
    U 1
    R 2
    D 1
    U 1
    R 2
    L 2
    U 2
    R 2
    U 1
    D 1
    R 2
    L 1
    U 1
    L 2
    D 1
    R 1
    U 2
    L 1
    D 2
    L 1
    R 2
    D 2
    L 2
    R 2
    U 2
    R 2
    D 2
    L 1
    R 2
    U 1
    R 2
    U 1
    L 1
    R 1
    L 2
    U 2
    L 1
    D 2
    L 2
    U 2
    D 2
    R 2
    D 2
    R 1
    U 2
    L 1
    U 1
    L 2
    R 1
    D 1
    R 1
    L 1
    D 2
    L 2
    R 2
    D 3
    R 2
    D 2
    L 3
    R 1
    L 2
    U 3
    D 1
    U 1
    L 2
    D 2
    L 2
    R 2
    L 1
    U 2
    D 2
    U 2
    D 1
    L 1
    D 1
    R 2
    D 3
    U 3
    D 3
    L 2
    R 2
    U 1
    L 3
    R 2
    U 2
    D 2
    L 3
    D 2
    R 3
    D 3
    U 2
    R 2
    D 2
    U 1
    L 3
    R 3
    U 3
    L 3
    D 3
    L 3
    D 2
    L 1
    R 2
    L 1
    R 2
    D 1
    L 3
    R 2
    D 3
    L 1
    R 1
    L 2
    U 1
    L 2
    R 2
    U 2
    L 1
    D 1
    R 3
    L 1
    R 2
    U 2
    D 1
    R 2
    U 1
    R 3
    U 1
    D 3
    R 3
    L 1
    D 1
    U 1
    D 3
    R 2
    U 1
    R 1
    U 1
    L 3
    D 2
    U 3
    R 2
    D 1
    R 1
    U 2
    L 1
    U 1
    R 3
    U 2
    D 1
    R 2
    U 3
    D 2
    U 1
    R 2
    L 2
    U 3
    L 1
    R 1
    L 2
    D 2
    U 1
    D 2
    R 3
    D 3
    U 4
    R 3
    D 2
    U 4
    L 4
    U 3
    L 1
    U 2
    L 2
    R 3
    U 4
    D 1
    L 1
    D 2
    L 2
    R 1
    L 2
    U 1
    L 3
    D 1
    L 2
    D 3
    R 3
    D 4
    L 2
    U 4
    L 3
    R 4
    D 4
    R 2
    D 2
    L 2
    R 2
    U 4
    L 3
    D 1
    R 1
    L 2
    D 1
    U 1
    L 2
    U 1
    L 1
    U 2
    D 4
    L 4
    U 2
    R 2
    L 2
    R 3
    U 2
    D 3
    U 4
    D 3
    R 2
    L 4
    U 2
    R 2
    U 3
    D 4
    R 4
    L 2
    R 4
    D 4
    U 3
    L 3
    D 4
    L 4
    R 2
    L 1
    R 3
    D 2
    U 4
    R 3
    U 1
    R 2
    U 1
    D 1
    R 1
    L 4
    U 4
    R 1
    D 4
    L 3
    U 1
    D 2
    R 2
    L 2
    D 2
    U 4
    R 3
    L 4
    D 1
    R 1
    U 3
    R 4
    L 2
    R 2
    U 3
    L 4
    R 1
    L 3
    D 3
    R 2
    D 2
    L 2
    D 2
    U 4
    D 5
    L 4
    U 2
    D 3
    L 1
    U 4
    R 5
    D 5
    U 4
    R 5
    L 2
    D 4
    R 2
    L 2
    R 1
    U 1
    D 5
    U 1
    D 2
    R 5
    L 4
    D 4
    R 2
    L 3
    R 3
    L 1
    U 4
    R 2
    L 4
    U 5
    R 5
    D 3
    U 4
    L 2
    U 5
    R 3
    U 5
    L 4
    R 2
    U 2
    R 3
    L 5
    D 2
    R 5
    L 2
    R 5
    D 4
    U 4
    L 5
    U 1
    D 4
    U 5
    L 5
    D 2
    L 2
    D 4
    L 2
    D 2
    R 4
    U 4
    D 2
    L 1
    D 3
    U 3
    R 2
    D 2
    L 5
    D 3
    R 2
    L 2
    U 3
    D 5
    R 1
    L 4
    D 1
    L 5
    R 3
    L 3
    D 3
    L 2
    U 5
    L 5
    R 4
    D 5
    U 2
    R 2
    L 3
    U 1
    D 1
    U 2
    R 3
    U 2
    L 4
    U 4
    L 3
    U 3
    D 3
    R 2
    L 5
    R 5
    U 2
    D 2
    U 4
    D 3
    U 1
    L 1
    D 4
    R 3
    L 1
    D 5
    R 3
    U 1
    L 6
    U 5
    D 4
    R 4
    L 5
    U 2
    D 6
    L 4
    R 2
    U 4
    L 2
    R 1
    U 6
    D 6
    R 1
    L 2
    U 4
    L 2
    D 6
    L 6
    R 3
    L 3
    D 5
    U 6
    D 5
    U 5
    L 6
    R 6
    U 3
    R 6
    U 2
    D 1
    U 3
    R 6
    D 5
    L 3
    R 1
    D 6
    R 3
    D 2
    U 2
    D 3
    L 6
    U 3
    L 3
    U 1
    R 6
    U 2
    D 3
    R 1
    U 3
    R 6
    L 2
    R 4
    L 1
    R 5
    L 1
    R 4
    U 6
    D 3
    U 2
    L 4
    R 1
    L 2
    R 4
    U 5
    R 1
    L 2
    U 1
    R 2
    U 6
    R 1
    D 2
    L 1
    U 2
    D 2
    L 1
    U 1
    R 4
    D 5
    L 4
    D 6
    L 2
    U 3
    D 3
    L 1
    R 3
    D 1
    L 6
    D 1
    U 6
    L 1
    D 6
    U 3
    R 5
    L 2
    R 4
    D 5
    L 4
    D 6
    U 1
    D 6
    L 6
    U 3
    D 3
    U 2
    L 1
    R 5
    U 5
    L 6
    U 5
    R 5
    D 4
    U 7
    R 7
    L 2
    D 3
    R 3
    L 1
    D 6
    R 3
    L 2
    U 2
    D 2
    U 2
    L 7
    R 4
    U 3
    L 3
    R 2
    L 5
    U 3
    R 6
    U 5
    L 7
    U 7
    L 4
    U 5
    L 7
    D 1
    L 1
    D 2
    U 3
    R 5
    D 1
    R 6
    L 3
    U 5
    D 6
    L 4
    D 3
    U 3
    R 3
    U 1
    R 2
    L 7
    D 7
    R 4
    L 6
    D 7
    L 7
    D 2
    U 1
    R 2
    U 3
    L 2
    D 2
    L 5
    D 4
    R 5
    D 7
    U 5
    D 1
    L 4
    U 2
    R 5
    D 6
    L 4
    R 7
    U 6
    D 2
    L 4
    D 4
    L 1
    R 4
    L 1
    R 5
    U 5
    R 5
    L 1
    D 2
    R 1
    U 5
    L 4
    D 2
    U 3
    L 2
    R 5
    U 4
    L 1
    R 5
    L 1
    D 5
    R 7
    L 5
    U 5
    L 7
    U 3
    D 6
    U 2
    L 2
    R 5
    U 7
    D 1
    R 2
    U 4
    R 7
    U 6
    L 3
    U 5
    D 3
    U 5
    D 6
    R 2
    U 8
    R 7
    L 5
    U 1
    D 3
    L 3
    U 6
    L 6
    U 5
    D 7
    U 3
    L 6
    U 1
    D 3
    R 5
    L 2
    R 1
    D 6
    R 2
    L 1
    R 5
    D 3
    L 1
    R 3
    L 6
    D 5
    U 5
    L 5
    D 3
    L 4
    R 7
    D 6
    L 8
    R 6
    U 8
    D 6
    R 3
    U 4
    R 1
    U 6
    R 3
    L 6
    D 2
    U 5
    R 2
    D 5
    U 7
    D 2
    U 2
    R 3
    L 3
    U 4
    R 3
    U 7
    L 2
    D 3
    R 2
    D 4
    L 4
    D 8
    R 2
    U 2
    L 7
    R 8
    U 8
    L 4
    U 3
    R 3
    U 8
    D 2
    U 5
    D 8
    R 8
    L 8
    R 4
    D 8
    L 7
    U 6
    L 4
    D 6
    U 2
    L 4
    U 8
    R 8
    U 6
    D 1
    R 5
    U 5
    L 8
    U 2
    R 3
    U 7
    L 5
    U 5
    L 7
    D 8
    R 7
    U 4
    D 7
    U 4
    L 3
    R 3
    D 5
    U 1
    L 6
    D 3
    U 5
    D 3
    R 1
    U 2
    L 3
    R 8
    U 1
    D 6
    R 6
    U 9
    D 4
    U 4
    D 2
    L 1
    R 2
    L 6
    U 6
    L 1
    R 1
    U 9
    D 1
    R 4
    L 3
    D 8
    U 7
    D 1
    R 7
    L 6
    U 3
    R 2
    L 2
    D 6
    U 5
    D 6
    L 6
    U 8
    L 5
    R 4
    U 6
    L 1
    U 8
    L 4
    R 1
    D 7
    R 9
    U 2
    D 3
    R 6
    L 8
    U 6
    R 4
    D 1
    U 7
    R 1
    D 9
    L 8
    D 9
    R 1
    U 6
    R 7
    D 2
    U 7
    R 4
    D 9
    R 7
    D 2
    U 1
    R 3
    D 4
    L 5
    U 7
    R 7
    D 2
    U 8
    R 8
    L 4
    U 6
    L 3
    D 8
    L 8
    D 9
    R 7
    L 5
    U 5
    R 4
    U 9
    R 3
    U 9
    R 1
    U 2
    R 9
    U 8
    L 8
    U 7
    R 1
    D 9
    U 4
    L 7
    R 3
    U 5
    L 6
    D 1
    L 4
    D 4
    U 6
    R 7
    L 7
    U 3
    L 8
    D 8
    L 7
    U 3
    D 4
    R 8
    D 1
    R 8
    U 10
    L 1
    U 2
    D 4
    U 3
    R 8
    U 3
    D 5
    R 8
    D 10
    R 8
    D 4
    R 9
    D 1
    L 3
    U 7
    R 7
    L 1
    D 8
    R 6
    D 4
    U 5
    L 2
    U 3
    R 7
    U 10
    L 1
    U 7
    R 1
    U 7
    D 2
    L 10
    U 2
    L 4
    D 6
    R 10
    D 4
    U 7
    L 6
    R 4
    U 6
    D 1
    U 6
    D 5
    U 6
    L 4
    D 2
    L 2
    U 7
    R 2
    U 9
    L 9
    D 2
    U 9
    R 9
    U 9
    D 3
    R 5
    D 3
    L 10
    U 3
    D 10
    L 10
    D 1
    U 2
    D 3
    R 8
    L 1
    U 6
    L 2
    R 9
    U 3
    D 5
    L 8
    U 4
    R 8
    D 5
    L 6
    U 7
    D 8
    R 9
    U 9
    R 8
    D 4
    R 5
    U 6
    L 8
    R 2
    D 3
    L 8
    D 6
    R 7
    L 10
    U 9
    R 6
    L 7
    U 8
    R 5
    L 1
    D 1
    R 6
    D 1
    R 9
    L 1
    U 5
    R 3
    D 7
    U 8
    D 6
    L 6
    U 11
    D 8
    L 6
    D 6
    L 7
    R 10
    U 5
    D 7
    R 5
    D 3
    L 4
    R 3
    D 2
    L 6
    U 6
    D 3
    L 4
    D 9
    L 6
    U 9
    L 3
    U 10
    R 5
    U 8
    R 2
    D 3
    L 6
    R 2
    U 6
    R 8
    D 2
    U 2
    R 5
    U 9
    L 5
    D 8
    R 2
    U 1
    R 1
    D 6
    U 4
    R 7
    L 7
    D 7
    U 11
    R 6
    U 11
    D 11
    R 6
    L 2
    D 10
    R 6
    D 5
    R 7
    D 11
    R 2
    U 10
    L 6
    D 4
    R 1
    L 3
    D 9
    U 8
    L 6
    U 1
    L 7
    D 10
    U 1
    L 1
    D 2
    U 3
    L 4
    R 6
    U 11
    R 6
    U 3
    L 8
    D 3
    R 7
    L 3
    D 4
    L 5
    U 8
    L 11
    R 1
    U 1
    L 9
    D 5
    U 3
    R 1
    L 6
    U 1
    L 3
    D 1
    L 8
    U 1
    D 9
    R 7
    U 11
    R 10
    U 8
    R 5
    U 3
    L 7
    R 3
    L 4
    U 6
    D 3
    U 3
    R 3
    D 1
    L 7
    U 5
    D 1
    U 6
    L 8
    D 3
    R 6
    U 10
    R 6
    D 1
    U 7
    R 5
    L 6
    R 5
    D 3
    R 9
    U 11
    L 8
    R 9
    U 5
    R 5
    L 1
    U 7
    L 11
    U 5
    R 3
    U 7
    R 9
    L 11
    D 11
    L 3
    U 11
    L 2
    U 3
    R 5
    D 1
    L 10
    R 8
    L 11
    U 1
    D 11
    L 4
    R 8
    L 9
    D 6
    U 10
    L 1
    R 12
    U 2
    D 8
    L 8
    U 1
    L 12
    D 9
    R 3
    U 3
    D 10
    U 11
    D 9
    U 8
    L 7
    D 10
    L 3
    U 9
    D 5
    R 12
    D 3
    R 9
    L 8
    R 12
    U 11
    D 5
    R 10
    D 8
    L 12
    U 7
    L 1
    R 7
    D 1
    R 12
    L 3
    R 7
    L 1
    R 2
    D 4
    U 3
    L 8
    U 2
    R 8
    U 5
    L 5
    R 7
    L 7
    R 7
    U 8
    R 3
    D 4
    L 7
    U 5
    L 5
    U 1
    D 12
    R 11
    L 5
    D 10
    R 8
    U 12
    L 11
    U 2
    R 2
    D 1
    U 4
    D 1
    U 1
    R 11
    D 1
    L 8
    U 5
    L 11
    D 11
    R 12
    L 6
    R 8
    L 13
    U 7
    R 7
    D 1
    R 13
    D 6
    L 5
    R 10
    U 4
    R 11
    D 6
    U 1
    D 6
    R 1
    U 1
    L 12
    U 8
    R 4
    U 9
    R 12
    D 1
    R 8
    D 2
    U 5
    L 7
    U 12
    L 5
    D 10
    R 8
    D 6
    R 13
    D 7
    U 7
    L 9
    D 12
    U 5
    L 7
    D 4
    U 2
    R 13
    U 11
    L 3
    R 6
    D 5
    R 6
    L 11
    U 6
    D 5
    U 6
    L 2
    D 8
    R 4
    U 4
    L 12
    D 6
    U 8
    D 8
    L 5
    D 12
    R 8
    U 11
    D 8
    L 7
    U 13
    L 11
    R 6
    U 5
    D 9
    L 11
    U 10
    D 13
    R 5
    D 8
    R 7
    D 6
    R 7
    D 2
    L 13
    R 11
    U 1
    D 7
    U 13
    R 9
    U 12
    R 13
    L 2
    U 13
    D 2
    U 6
    L 6
    D 5
    R 5
    L 2
    U 1
    R 4
    U 6
    L 10
    R 12
    L 3
    D 3
    L 8
    D 10
    U 2
    L 11
    U 2
    L 11
    R 8
    U 12
    R 3
    U 5
    L 7
    D 6
    U 6
    L 10
    R 4
    L 1
    U 8
    D 4
    R 13
    L 7
    U 6
    L 9
    U 13
    D 13
    L 8
    U 3
    L 13
    D 14
    L 1
    U 9
    D 1
    U 9
    R 12
    D 7
    L 9
    R 13
    D 12
    U 10
    D 4
    L 13
    R 11
    L 2
    D 9
    R 4
    U 10
    L 2
    D 8
    U 11
    L 14
    R 1
    U 2
    D 9
    U 8
    L 4
    D 14
    U 10
    R 3
    D 12
    U 12
    L 1
    U 1
    D 7
    U 8
    R 9
    D 7
    R 11
    D 11
    R 13
    D 14
    L 5
    D 1
    U 12
    D 7
    U 13
    D 9
    U 6
    R 5
    U 13
    L 4
    D 8
    L 3
    U 8
    D 4
    R 4
    D 2
    L 1
    D 12
    R 11
    U 11
    D 6
    R 12
    U 3
    D 2
    R 6
    D 1
    U 11
    L 7
    D 9
    L 8
    R 1
    U 13
    D 7
    L 9
    U 4
    D 8
    L 12
    D 6
    R 4
    D 5
    U 13
    L 2
    D 11
    R 4
    D 5
    L 4
    U 9
    L 12
    U 10
    D 3
    R 15
    L 3
    D 10
    L 4
    R 2
    D 10
    R 1
    U 10
    L 9
    D 7
    L 5
    R 8
    U 3
    D 9
    R 5
    D 8
    U 5
    D 5
    L 8
    U 2
    R 5
    U 4
    D 6
    R 3
    L 1
    U 15
    R 12
    D 14
    R 12
    U 14
    D 8
    U 10
    R 9
    D 8
    L 10
    R 4
    U 5
    D 15
    U 6
    D 4
    R 7
    D 1
    R 15
    U 15
    D 4
    R 6
    L 1
    R 7
    L 12
    U 3
    R 1
    L 6
    D 6
    R 5
    D 15
    R 1
    U 10
    R 4
    D 13
    L 5
    D 10
    L 7
    R 5
    U 15
    L 11
    U 4
    D 9
    U 12
    R 12
    L 9
    D 10
    U 7
    R 3
    L 10
    R 12
    D 2
    U 8
    L 7
    R 3
    U 1
    D 10
    L 11
    R 12
    L 8
    U 1
    D 12
    L 4
    D 4
    L 6
    D 7
    R 3
    L 7
    U 1
    R 4
    L 1
    U 2
    L 6
    D 4
    L 7
    R 7
    L 15
    U 4
    R 7
    D 8
    U 9
    D 3
    L 5
    U 6
    R 2
    D 10
    L 9
    U 16
    L 15
    U 1
    R 15
    U 13
    L 12
    D 10
    R 1
    D 6
    R 3
    D 1
    L 14
    R 10
    D 2
    R 10
    U 12
    R 10
    L 13
    U 14
    D 11
    U 16
    R 6
    U 4
    R 6
    U 13
    R 5
    D 1
    L 12
    U 14
    D 11
    R 11
    D 7
    L 3
    R 7
    L 9
    U 11
    D 6
    U 14
    D 2
    L 1
    R 16
    L 14
    D 10
    U 4
    R 15
    U 11
    R 10
    D 5
    R 8
    U 13
    D 11
    U 9
    R 8
    D 4
    L 11
    U 8
    R 7
    D 14
    U 8
    D 6
    L 13
    R 2
    L 16
    R 10
    U 7
    L 10
    U 2
    L 13
    U 8
    D 5
    U 3
    R 14
    D 15
    R 10
    D 4
    U 10
    D 15
    R 6
    U 13
    R 1
    U 16
    L 2
    U 6
    L 8
    D 2
    L 11
    U 15
    D 5
    U 1
    R 3
    D 16
    L 3
    R 4
    D 8
    R 10
    L 8
    D 1
    U 2
    R 4
    U 3
    D 16
    U 10
    R 11
    L 11
    R 7
    L 3
    U 17
    D 1
    L 10
    D 6
    L 6
    D 6
    R 8
    U 16
    D 15
    U 12
    L 12
    D 17
    U 9
    R 7
    U 12
    L 6
    D 5
    R 2
    L 17
    U 6
    R 1
    D 13
    R 11
    D 17
    R 5
    L 3
    D 3
    U 4
    D 4
    U 4
    L 11
    R 4
    L 15
    D 7
    U 13
    D 12
    U 1
    L 16
    D 2
    L 12
    R 15
    U 11
    R 15
    D 12
    R 4
    L 3
    R 3
    U 3
    L 13
    U 4
    L 16
    U 7
    D 17
    R 14
    U 11
    D 4
    L 11
    U 9
    D 8
    U 3
    R 10
    U 16
    R 5
    L 10
    D 3
    L 7
    U 9
    R 2
    U 14
    L 8
    R 9
    L 6
    D 14
    L 14
    U 3
    D 9
    L 8
    D 14
    U 6
    L 4
    R 7
    D 4
    L 6
    U 11
    R 8
    D 8
    R 5
    U 17
    R 15
    U 1
    L 17
    D 14
    L 2
    D 3
    L 16
    D 7
    L 16
    R 10
    D 6
    R 11
    U 10
    L 14
    R 2
    U 3
    D 1
    R 16
    L 5
    R 2
    D 15
    U 6
    L 3
    D 9
    R 12
    D 13
    U 17
    R 16
    D 15
    U 3
    D 13
    L 7
    R 12
    U 18
    L 12
    U 7
    L 18
    D 12
    L 17
    D 6
    L 8
    D 16
    L 9
    R 8
    U 9
    D 9
    U 16
    L 10
    U 12
    L 9
    U 10
    R 13
    L 7
    U 17
    L 13
    D 18
    L 6
    R 14
    L 9
    U 1
    R 8
    U 3
    R 13
    D 3
    L 14
    D 8
    L 12
    R 3
    L 11
    R 2
    D 7
    R 14
    L 9
    U 1
    D 5
    U 10
    R 5
    D 8
    U 2
    D 17
    L 16
    D 3
    U 15
    R 17
    D 10
    R 16
    L 3
    U 2
    R 5
    L 7
    U 7
    D 12
    L 8
    R 4
    L 18
    R 13
    L 18
    R 11
    U 1
    D 1
    L 12
    U 15
    L 4
    D 12
    U 13
    L 14
    D 14
    L 12
    D 14
    U 14
    L 6
    R 5
    D 6
    L 13
    U 16
    L 11
    U 7
    R 10
    D 6
    U 17
    L 12
    R 11
    D 11
    U 7
    R 2
    U 9
    R 16
    L 5
    D 16
    R 7
    U 4
    D 19
    L 2
    D 18
    R 1
    U 15
    R 13
    D 5
    R 2
    U 2
    D 12
    L 17
    D 11
    U 8
    R 13
    U 11
    R 2
    U 13
    R 11
    U 19
    L 17
    R 17
    D 16
    R 18
    U 9
    L 13
    D 1
    R 16
    D 13
    R 6
    D 9
    R 7
    U 10
    D 10
    U 8
    R 8
    L 2
    R 17
    D 13
    L 9
    U 19
    D 6
    L 14
    R 9
    L 19
    D 17
    R 17
    D 10
    L 1
    U 15
    D 17
    L 12
    R 10
    L 14
    U 16
    L 17
    U 8
    R 8
    U 4
    R 11
    U 14
    R 2
    L 9
    U 11
    D 14
    U 14
    D 9
    L 10
    U 19
    D 10
    R 5
    D 1
    L 3
    U 14
    R 11
    L 17
    R 7
    D 8
    R 1
    U 2
    R 4
    L 2
    R 13
    U 16
    D 2
    L 2
    R 2
    U 16
    L 3
    D 7
    R 7
    U 2
    L 5
    U 7
    R 17
    U 6
    D 12
    U 17
    D 13
    L 19
    R 19
    L 9
    D 14
    R 15
    L 7
    U 11
    R 2
    D 16
    U 6
    L 12
""".parse.mapLines { it[0] to it.substringAfter(" ").toInt() }

// test case

data class Point(val x: Int = 0, val y: Int = 0) {
    override fun toString() = "$x:$y"
}

val tpos = mutableSetOf<Point>()
var theadPos = Point()
var ttailPos = Point().also { tpos += it }
testInput.forEach {
    val nue = it.applyMove(theadPos, ttailPos, tpos)
    theadPos = nue.first
    ttailPos = nue.second
}
//println(tpos)
//println(tpos.size)

val posTB = mutableSetOf<Point>()
var snakeTB = (1..10).map { Point() }
testInput2.forEach {
    snakeTB = it.applyMove(snakeTB, posTB)
}
println(posTB)
println(posTB.size)

// part 1

val pos = mutableSetOf<Point>()
var headPos = Point()
var tailPos = Point().also { pos += it }
input.forEach {
    val nue = it.applyMove(headPos, tailPos, pos)
    headPos = nue.first
    tailPos = nue.second
}

fun Pair<Char, Int>.applyMove(curPos: Point, tailPos: Point, tailHistory: MutableSet<Point>): Pair<Point, Point> {
    var res = curPos to tailPos
    repeat(second) {
        res = applyMove(first, res.first, res.second)
        tailHistory += res.second
//        println(res.second)
    }
    return res
}

fun applyMove(dir: Char, headPos: Point, tailPos: Point): Pair<Point, Point> {
    val nueHead = headPos.applyDir(dir)
    val diffx = (nueHead.x - tailPos.x).absoluteValue
    val diffy = (nueHead.y - tailPos.y).absoluteValue

    val nueTail = if (diffx <= 1 && diffy <= 1) {
        // close by, don't move
        tailPos.copy()
    } else if (diffx == 0 || diffy == 0) {
        // straight, go in same direction
        tailPos.applyDir(dir)
    } else {
        // diagonal, move directly behind head
        when (dir) {
            'U' -> Point(nueHead.x, nueHead.y + 1)
            'D' -> Point(nueHead.x, nueHead.y - 1)
            'L' -> Point(nueHead.x + 1, nueHead.y)
            'R' -> Point(nueHead.x - 1, nueHead.y)
            else -> TODO()
        }
    }
    return nueHead to nueTail
}

fun Point.applyDir(dir: Char): Point {
    return when (dir) {
        'U' -> Point(x, y-1)
        'D' -> Point(x, y+1)
        'L' -> Point(x-1, y)
        'R' -> Point(x+1, y)
        else -> TODO()
    }
}

val answer1 = pos.size
answer1.print

// part 2

val posB = mutableSetOf<Point>()
var snakeB = (1..10).map { Point() }
input.forEach {
    snakeB = it.applyMove(snakeB, posB)
}

val answer2 = posB.size
answer2.print

fun Pair<Char, Int>.applyMove(snake: List<Point>, tailHistory: MutableSet<Point>): List<Point> {
    var res = snake.toList()
    repeat(second) {
        res = applyMove(first, res)
        tailHistory += res.last()
    }
//    println(res)
    return res
}

fun applyMove(dir: Char, snake: List<Point>): List<Point> {
    val res = mutableListOf<Point>()
    snake.forEachIndexed { i, p ->
        res += if (i == 0) {
            p.applyDir(dir)
        } else {
            val leader = res[i - 1]
            p.followDir(leader)
        }
    }
    return res
}

fun Point.followDir(leader: Point): Point {
    val diffx = (leader.x - x).absoluteValue
    val diffy = (leader.y - y).absoluteValue

    return if (diffx <= 1 && diffy <= 1) {
        // close by, don't move
        copy()
    } else if (diffx == 0 || diffy == 0) {
        Point((leader.x + x)/2, (leader.y + y)/2)
    } else if (diffx == 1) {
        Point(leader.x, (leader.y + y)/2)
    } else if (diffy == 1) {
        Point((leader.x + x)/2, leader.y)
    } else {
        Point((leader.x + x)/2, (leader.y + y)/2)
    }
}

// Define a function to print the grid
fun printGrid(gridSize: Int, points: List<Point>) {
    // Print the grid, with a period representing an empty space
    // and the index of the point representing the position of the point
    for (row in -gridSize until gridSize) {
        for (col in -gridSize until gridSize) {
            // Check if the current position is the position of a point in the list
            val index = points.indexOfFirst { it.x == col && it.y == row }
            if (index >= 0) {
                print("#") // Print the index of the point in the list
            } else {
                print(".") // Print a period for an empty space
            }
        }
        print("\n") // Move to the next line after each row
    }
}

printGrid(10, posTB.toList())

// print results

AocRunner(day,
    info = { listOf("Leaderboard: 7:32/14:08", "Answers: 6271/2458") },
    test = { "${tpos.size},${posTB.size}" },
    part1 = { answer1 },
    part2 = { answer2 }
).run()
